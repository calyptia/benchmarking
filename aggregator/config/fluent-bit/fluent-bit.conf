[SERVICE]
    log_level       info
    # We expose via node-port the FB pods on 2020 so use another for our local one if you enable this
    http_server     off
    http_port       2022
    storage.metrics on
    parsers_file    parsers.conf

# [INPUT]
#     name            fluentbit_metrics
#     tag             node.fluentbit_internal_metrics

# [INPUT]
#     name            node_exporter_metrics
#     tag             node.fluentbit_node

# Scrape node exporter metrics
[INPUT]
    name            prometheus_scrape
    tag             node.node_exporter_metrics
    host            0.0.0.0
    port            9100
    alias           node_exporter_metrics

# Scrape process exporter metrics
[INPUT]
    name            prometheus_scrape
    tag             node.process_exporter_metrics
    host            0.0.0.0
    port            9256
    alias           process_exporter_metrics

# Scrape Fluentd metrics if available
[INPUT]
    name            prometheus_scrape
    tag             node.fluentd_metrics
    host            0.0.0.0
    port            24231
    alias           fluentd_exporter_metrics

# For local view/debug
# [OUTPUT]
#     name            stdout
#     match           *

# For Grafana Cloud, make sure to set up the appropriate environment variables for your keys in systemd service
# See https://github.com/calyptia/openshift-fluent-bit-examples/tree/main/grafana-cloud &
# https://calyptia.com/2022/03/23/how-to-send-openshift-logs-and-metrics-to-datadog-elastic-and-grafana/
# These should be injected via cloud-init.
[OUTPUT]
    name            prometheus_remote_write
    host            ${GRAFANA_CLOUD_PROM_URL}
    match           node.*
    uri             /api/prom/push
    port            443
    tls             on
    tls.verify      on
    http_user       ${GRAFANA_CLOUD_PROM_USERNAME}
    http_passwd     ${GRAFANA_CLOUD_APIKEY}
    # Note that the `name` label will provide details of the input but we add some extra labels too
    add_label       source node
    add_label       core_hostname ${HOSTNAME}
    Retry_Limit     no_retries

# Pick up our container logs as well
[INPUT]
    name            tail
    path            /var/log/containers/*
    Tag_Regex       /var/log/containers/(?<logname>[^.]+).log$
    Path_Key        filename
    Tag             log.<logname>
    Skip_Long_Lines On

# Split filename key into file name and path to simplify filtering in Grafana
[FILTER]
    Name parser
    Match log.*
    Key_Name filename
    Parser filename_shortener
    # Do not overwrite original field
    Preserve_Key On
    # Keep everything else
    Reserve_Data On

[OUTPUT]
    Name        loki
    Match       *
    Host        ${GRAFANA_CLOUD_LOKI_URL}
    port        443
    tls         on
    tls.verify  on
    http_user   ${GRAFANA_CLOUD_LOKI_USERNAME}
    http_passwd ${GRAFANA_CLOUD_APIKEY}
    tenant_id   benchmarking
    Retry_Limit no_retries
